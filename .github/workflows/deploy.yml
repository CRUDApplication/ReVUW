name: Deploy to GCP

on:
  push:
    branches:
      - 40-create-email-password-reset-loop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Setup Google Cloud SDK
    - name: Setup gcloud
      uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Authenticate Docker to GCR
      run: gcloud auth configure-docker

    - name: Build and push client image
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      run: |
        docker build -f src/Dockerfile -t gcr.io/$GCP_PROJECT_ID/client:latest .
        docker push gcr.io/$GCP_PROJECT_ID/client:latest

    - name: Build and push gateway image
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      run: |
        docker build -f src/api_gateway/Dockerfile -t gcr.io/$GCP_PROJECT_ID/gateway:latest .
        docker push gcr.io/$GCP_PROJECT_ID/gateway:latest

    - name: Build and push grpc-server image
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      run: |
        docker build -f src/grpc_server/Dockerfile -t gcr.io/$GCP_PROJECT_ID/grpc-server:latest .
        docker push gcr.io/$GCP_PROJECT_ID/grpc-server:latest
  
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Setup Google Cloud SDK
    - name: Setup gcloud
      uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Authenticate Docker to GCR
      run: gcloud auth configure-docker

    - name: Deploy to GCE VM
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCP_VM_INSTANCE: ${{ secrets.GCP_VM_INSTANCE }}
        GCP_VM_ZONE: ${{ secrets.GCP_VM_ZONE }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
        PASSWORD_RESET_EMAIL_USERNAME: ${{ secrets.PASSWORD_RESET_EMAIL_USERNAME }}
        PASSWORD_RESET_EMAIL_PASSWORD: ${{ secrets.PASSWORD_RESET_EMAIL_PASSWORD }}
      run: |
        # Copy docker-compose.yml to the VM's /tmp directory
        gcloud compute scp ./docker-compose.yml $GCP_VM_INSTANCE:/tmp/docker-compose.yml --zone=$GCP_VM_ZONE

        # SSH into the GCP VM, move the docker-compose.yml to /home/ubuntu, authenticate Docker to GCR and run docker-compose
        gcloud compute ssh $GCP_VM_INSTANCE --zone=$GCP_VM_ZONE --command="\
          sudo mv /tmp/docker-compose.yml /home/ubuntu/docker-compose.yml && \
          gcloud auth configure-docker && \
          cd /home/ubuntu/ && \
          sudo GOOGLE_CLIENT_ID='$GOOGLE_CLIENT_ID' GOOGLE_CLIENT_SECRET='$GOOGLE_CLIENT_SECRET' MONGODB_URI='$MONGODB_URI' SESSION_SECRET='$SESSION_SECRET' PASSWORD_RESET_EMAIL_USERNAME='$PASSWORD_RESET_EMAIL_USERNAME' PASSWORD_RESET_EMAIL_PASSWORD='$PASSWORD_RESET_EMAIL_PASSWORD' docker-compose pull && \
          sudo GOOGLE_CLIENT_ID='$GOOGLE_CLIENT_ID' GOOGLE_CLIENT_SECRET='$GOOGLE_CLIENT_SECRET' MONGODB_URI='$MONGODB_URI' SESSION_SECRET='$SESSION_SECRET' PASSWORD_RESET_EMAIL_USERNAME='$PASSWORD_RESET_EMAIL_USERNAME' PASSWORD_RESET_EMAIL_PASSWORD='$PASSWORD_RESET_EMAIL_PASSWORD' docker-compose down && \
          sudo GOOGLE_CLIENT_ID='$GOOGLE_CLIENT_ID' GOOGLE_CLIENT_SECRET='$GOOGLE_CLIENT_SECRET' MONGODB_URI='$MONGODB_URI' SESSION_SECRET='$SESSION_SECRET' PASSWORD_RESET_EMAIL_USERNAME='$PASSWORD_RESET_EMAIL_USERNAME' PASSWORD_RESET_EMAIL_PASSWORD='$PASSWORD_RESET_EMAIL_PASSWORD' docker-compose up -d"
